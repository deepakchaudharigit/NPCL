# NPCL Dashboard Docker Compose Configuration
# This file sets up the complete development environment with PostgreSQL

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: npcl-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: npcl_dashboard
      POSTGRES_USER: npcl_user
      POSTGRES_PASSWORD: npcl_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/db/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - npcl-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U npcl_user -d npcl_dashboard"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NPCL Dashboard Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: npcl-dashboard
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://npcl_user:npcl_password@postgres:5432/npcl_dashboard
      - NEXTAUTH_SECRET=your-secret-key-here-make-it-long-and-random-minimum-32-characters
      - NEXTAUTH_URL=http://localhost:3000
      - ENABLE_REGISTRATION=true
      - ENABLE_EMAIL_NOTIFICATIONS=false
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - npcl-network
    volumes:
      - ./uploads:/app/uploads
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis (Optional - for session storage and caching)
  redis:
    image: redis:7-alpine
    container_name: npcl-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - npcl-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Nginx (Optional - for reverse proxy and load balancing)
  nginx:
    image: nginx:alpine
    container_name: npcl-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - app
    networks:
      - npcl-network
    profiles:
      - production

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  npcl-network:
    driver: bridge

# Development override
# Use: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up
---
# docker-compose.dev.yml (for development)
version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    environment:
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    command: npm run dev

  postgres:
    ports:
      - "5433:5432"  # Different port for dev to avoid conflicts